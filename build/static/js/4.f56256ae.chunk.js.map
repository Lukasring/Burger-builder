{"version":3,"sources":["components/Order/Order/Order.module.css","components/Order/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","ammount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","price","Button","btnType","clicked","delete","connect","state","loading","orders","token","auth","userId","dispatch","onFetchOrders","actions","onDeleteOrder","orderId","withErrorHandler","useEffect","Spinner","id","length","textAlign","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,6HC0CXC,EAvCD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,QAASL,EAAMC,YAAYC,KAI/B,IAAII,EAAmBL,EAAYM,KAAI,SAACC,GACtC,OACE,0BACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKP,EAAGJ,MAEPI,EAAGJ,KAVN,KAUcI,EAAGH,QAVjB,QAeJ,OACE,yBAAKW,UAAWC,IAAQC,OACtB,2CAAiBZ,GACjB,qCACS,yCAAUN,EAAMmB,QAEzB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAStB,EAAMuB,QAAxC,YCkBSC,uBAlBS,SAACC,GACvB,MAAO,CACLC,QAASD,EAAM1B,MAAM2B,QACrBC,OAAQF,EAAM1B,MAAM4B,OACpBC,MAAOH,EAAMI,KAAKD,MAClBE,OAAQL,EAAMI,KAAKC,WAII,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OACbC,EAASE,IAAoBL,EAAOE,KACtCI,cAAe,SAACC,EAASP,GAAV,OACbG,EAASE,IAAoBE,EAASP,QAI7BJ,CAGbY,aAhDa,SAACpC,GAAW,IACjBgC,EAAiChC,EAAjCgC,cAAeJ,EAAkB5B,EAAlB4B,MAAOE,EAAW9B,EAAX8B,OAC9BO,qBAAU,WACRL,EAAcJ,EAAOE,KACpB,CAACE,EAAeJ,EAAOE,IAE1B,IAIIH,EAAS,kBAACW,EAAA,EAAD,MAcb,OAbKtC,EAAM0B,UACTC,EAAS3B,EAAM2B,OAAOpB,KAAI,SAACR,GAAD,OACxB,kBAACmB,EAAD,CACEH,IAAKhB,EAAMwC,GACXtC,YAAaF,EAAME,YACnBkB,MAAOpB,EAAMoB,MACbI,OAAQ,kBAXcY,EAWWpC,EAAMwC,QAV3CvC,EAAMkC,cAAcC,EAASP,GADJ,IAACO,SAevBnC,EAAM0B,SAAmC,IAAxB1B,EAAM2B,OAAOa,SACjCb,EAAS,uBAAGlB,MAAO,CAAEgC,UAAW,WAAvB,yBAEJ,6BAAMd,KAwBYe","file":"static/js/4.f56256ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Z2Tw\"};","import React from \"react\";\r\nimport classes from \"./Order.module.css\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      ammount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n\r\n  let ingredientOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\",\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name} ({ig.ammount})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>â‚¬{props.price}</strong>\r\n      </p>\r\n      <Button btnType=\"Danger\" clicked={props.delete}>\r\n        Delete\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nimport Order from \"../../components/Order/Order/Order\";\r\n\r\nconst Orders = (props) => {\r\n  const { onFetchOrders, token, userId } = props;\r\n  useEffect(() => {\r\n    onFetchOrders(token, userId);\r\n  }, [onFetchOrders, token, userId]);\r\n\r\n  const deleteOrderHandler = (orderId) => {\r\n    props.onDeleteOrder(orderId, token);\r\n  };\r\n\r\n  let orders = <Spinner />;\r\n  if (!props.loading) {\r\n    orders = props.orders.map((order) => (\r\n      <Order\r\n        key={order.id}\r\n        ingredients={order.ingredients}\r\n        price={order.price}\r\n        delete={() => deleteOrderHandler(order.id)}\r\n      />\r\n    ));\r\n  }\r\n  if (!props.loading && props.orders.length === 0) {\r\n    orders = <p style={{ textAlign: \"center\" }}>There are no orders!</p>;\r\n  }\r\n  return <div>{orders}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.order.loading,\r\n    orders: state.order.orders,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId)),\r\n    onDeleteOrder: (orderId, token) =>\r\n      dispatch(actions.deleteOrder(orderId, token)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}